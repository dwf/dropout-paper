!obj:pylearn2.train.Train {
    dataset: &train !obj:pieceout.datasets.data_subsets.ClassificationSubtask {
        dataset: !obj:pylearn2.datasets.mnist.MNIST {
            which_set: 'train',
            start: 0,
            stop: 50000,
            one_hot: false,
        },
        classes: [2, 3],
        one_hot: true,
    },
    model: !obj:pylearn2.models.mlp.MLP {
        layers: [
                 !obj:pylearn2.models.maxout.Maxout {
                     layer_name: 'h0',
                     num_units: 10,
                     num_pieces: 1,
                     irange: .5,
                     #max_col_norm: 1.9365,
                     min_zero: true
                 },
                 !obj:pylearn2.models.maxout.Maxout {
                     layer_name: 'h1',
                     num_units: 10,
                     num_pieces: 1,
                     irange: .5,
                     #max_col_norm: 1.9365,
                     min_zero: true
                 },
                 #!obj:pylearn2.models.maxout.Maxout {
                 #    layer_name: 'h1',
                 #    num_units: 10,
                 #    num_pieces: 1,
                 #    irange: .005,
                 #    #max_col_norm: 1.9365,
                 #    min_zero: true,
                 #},
                 !obj:pylearn2.models.mlp.Sigmoid {
                     layer_name: 'y',
                     #n_classes: 2,
                     monitor_style: 'classification',
                     irange: .5,
                     dim: 1
                 }
                ],
        nvis: 784,
    },
    algorithm: !obj:pylearn2.training_algorithms.sgd.SGD {
        batch_size: 100,
        learning_rate: .17,
        init_momentum: .6,
        monitoring_dataset:
            {
                'train' : *train,
                'valid': !obj:pieceout.datasets.data_subsets.ClassificationSubtask {
                            dataset: !obj:pylearn2.datasets.mnist.MNIST {
                                which_set: 'train',
                                start: 50000,
                                stop: 60000,
                                one_hot: false,
                            },
                            classes: [2, 3],
                            one_hot: true,
                        },
                'test': !obj:pieceout.datasets.data_subsets.ClassificationSubtask {
                            dataset: !obj:pylearn2.datasets.mnist.MNIST {
                                which_set: 'test',
                                one_hot: false,
                            },
                            classes: [2, 3],
                            one_hot: true,
                        },

            },
        cost: !obj:pylearn2.costs.mlp.dropout.Dropout {
            input_include_probs: { 'h0' : 1 },
            input_scales: { 'h0': 1. }
        },
        termination_criterion: !obj:pylearn2.termination_criteria.MonitorBased {
            channel_name: "valid_y_misclass",
            prop_decrease: 0.,
            N: 200
        },
        update_callbacks: !obj:pylearn2.training_algorithms.sgd.ExponentialDecay {
            decay_factor: 1.0001,
            min_lr: .000001
        }
    },
    extensions: [
        !obj:pylearn2.train_extensions.best_params.MonitorBasedSaveBest {
             channel_name: 'valid_y_misclass',
             save_path: "${PYLEARN2_TRAIN_FILE_FULL_STEM}_best.pkl"
        },
        !obj:pylearn2.training_algorithms.sgd.MomentumAdjustor {
            start: 1,
            saturate: 10,
            final_momentum: .8
        }
    ],
    save_path: "${PYLEARN2_TRAIN_FILE_FULL_STEM}.pkl",
    save_freq: 1
}
